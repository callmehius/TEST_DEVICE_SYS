"use client"

import { useEffect } from "react"
import { useRouter } from "next/navigation"
import { setCookie } from "@/lib/cookies"

export default function SsoCallbackPage() {
  const router = useRouter()

  useEffect(() => {
    // ‚úÖ L·∫•y code b·∫±ng window.location v√¨ useSearchParams c√≥ th·ªÉ delay
    const query = new URLSearchParams(window.location.search)
    const code = query.get("code")
    const state = query.get("state")

    console.log("üîë M√£ code:", code)
    if (!code) {
      alert("Kh√¥ng t√¨m th·∫•y m√£ code trong URL.")
      router.push("/")
      return
    }

    const exchangeCode = async () => {
      try {
        console.log("üì° G·ª≠i m√£ code t·ªõi backend:", code)

        const res = await fetch("https://localhost:7217/api/Auth/sso-callback", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ code }),
          credentials: "include",
        })

        const result = await res.json()
        console.log("‚úÖ Ph·∫£n h·ªìi t·ª´ server:", result)
        debugger
        if (!result.token || !result.role) {
          throw new Error("Ph·∫£n h·ªìi kh√¥ng h·ª£p l·ªá t·ª´ backend")
        }

        setCookie("auth_token", result.token, 7)
        setCookie("user_role", result.role, 7)
        setCookie("email", result.email, 7)

        console.log("üç™ Cookie sau khi l∆∞u:", document.cookie)

        router.push(result.role === "admin" ? "/admin" : "/device-check")
      } catch (err) {
        console.error("‚ùå L·ªói x√°c th·ª±c SSO:", err)
        alert("X√°c th·ª±c th·∫•t b·∫°i.")
        router.push("/")
      }
    }

    exchangeCode()
  }, [router])

  return (
    <div className="p-4 text-center">
      ƒêang x√°c th·ª±c t√†i kho·∫£n SSO...
    </div>
  )
}
